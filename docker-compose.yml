version: '3.8'

services:
  # Scraper principal
  scraper:
    build: .
    container_name: dje-scraper
    volumes:
      - ./logs:/app/logs
      - ./resultados:/app/resultados
      - ./src:/app/src:ro  # Read-only para código
    environment:
      - SELENIUM_HEADLESS=true
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://dje_user:dje_password@postgres:5432/dje_scraper
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dje-network
    command: ["python", "src/main.py"]
    restart: unless-stopped

  # PostgreSQL - Banco principal
  postgres:
    image: postgres:15-alpine
    container_name: dje-postgres
    environment:
      POSTGRES_DB: dje_scraper
      POSTGRES_USER: dje_user
      POSTGRES_PASSWORD: dje_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - dje-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dje_user -d dje_scraper"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Redis - Cache e filas
  redis:
    image: redis:7-alpine
    container_name: dje-redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - dje-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Scheduler - Execução automática
  scheduler:
    build: .
    container_name: dje-scheduler
    volumes:
      - ./logs:/app/logs
      - ./resultados:/app/resultados
      - ./src:/app/src:ro
    environment:
      - SELENIUM_HEADLESS=true
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://dje_user:dje_password@postgres:5432/dje_scraper
      - REDIS_URL=redis://redis:6379/0
      - SCHEDULE_ENABLED=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dje-network
    command: ["python", "scripts/scheduler.py"]
    profiles:
      - scheduler
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  dje-network:
    driver: bridge
    name: dje-network